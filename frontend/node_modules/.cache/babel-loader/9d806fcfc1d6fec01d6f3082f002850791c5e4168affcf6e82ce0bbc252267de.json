{"ast":null,"code":"var _jsxFileName = \"/Users/davicoscarelli/Documents/GitHub/makowebapp/frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from '../AxiosConfig.js';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const navigate = useNavigate();\n  const [refresh, setRefresh] = useState(false); // Initialize with true to fetch data on mount\n\n  // Function to fetch tasks from server\n  const fetchTasks = () => {\n    axios.get('/tasks').then(response => {\n      setTasks(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching tasks:\", error);\n      if (error.response && error.response.status === 401) {\n        alert('Session expired. Please login again.');\n        navigate('/login');\n      }\n    });\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    fetchTasks();\n  }, [navigate, fetchTasks]);\n  useEffect(() => {\n    if (refresh) {\n      fetchTasks();\n      setRefresh(false); // Reset refresh state after fetching\n    }\n  }, [refresh, fetchTasks]);\n  const handleAddTask = () => {\n    axios.post('/tasks', {\n      title: newTaskTitle\n    }).then(response => {\n      setTasks([...tasks, response.data]);\n      setNewTaskTitle('');\n    }).catch(error => {\n      console.error(\"Error adding task:\", error);\n    });\n    fetchTasks();\n  };\n  const handleTaskDelete = task => {\n    handleDelete(task.id);\n\n    // try {\n    //     axios.delete(`/tasks/${task.id}`);\n    // } catch (error) {\n    //     console.error(`Error deleting task:`, error);\n    // }\n    // setRefresh(true); \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onDelete: () => handleTaskDelete(task),\n      onSubTaskDelete: fetchTasks // If you want to refresh after a subtask is deleted as well\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTaskTitle,\n      onChange: e => setNewTaskTitle(e.target.value),\n      placeholder: \"New Task Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"SmSiRnpaKZve/X7Lps6yuiYJcFQ=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Task","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","newTaskTitle","setNewTaskTitle","navigate","refresh","setRefresh","fetchTasks","get","then","response","data","catch","error","console","status","alert","token","localStorage","getItem","handleAddTask","post","title","handleTaskDelete","task","handleDelete","id","className","children","map","onDelete","onSubTaskDelete","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/davicoscarelli/Documents/GitHub/makowebapp/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';  \nimport axios from '../AxiosConfig.js';\nimport Task from './Task';\n\nfunction TaskList() {\n    const [tasks, setTasks] = useState([]);\n    const [newTaskTitle, setNewTaskTitle] = useState('');\n\n    const navigate = useNavigate();\n    const [refresh, setRefresh] = useState(false); // Initialize with true to fetch data on mount\n\n\n    // Function to fetch tasks from server\n    const fetchTasks = () => {\n        axios.get('/tasks')\n            .then(response => {\n                setTasks(response.data);\n            })\n            .catch(error => {\n                console.error(\"Error fetching tasks:\", error);\n                if (error.response && error.response.status === 401) {\n                    alert('Session expired. Please login again.');\n                    navigate('/login');\n                }\n            });\n    };\n\n\n    \n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        \n        if (!token) {\n            navigate('/login');\n            return;\n        }\n\n        fetchTasks();\n    }, [navigate, fetchTasks]);\n\n    useEffect(() => {\n        if (refresh) {\n            fetchTasks();\n            setRefresh(false); // Reset refresh state after fetching\n        }\n    }, [refresh, fetchTasks]);\n\n    const handleAddTask = () => {\n        axios.post('/tasks', { title: newTaskTitle })\n            .then(response => {\n                setTasks([...tasks, response.data]);\n                setNewTaskTitle('');\n            })\n            .catch(error => {\n                console.error(\"Error adding task:\", error);\n            });\n        fetchTasks();\n    };\n\n    const handleTaskDelete = (task) => {\n        handleDelete(task.id);\n\n        // try {\n        //     axios.delete(`/tasks/${task.id}`);\n        // } catch (error) {\n        //     console.error(`Error deleting task:`, error);\n        // }\n        // setRefresh(true); \n        \n    };\n\n    return (\n        <div className=\"container\">\n            {tasks.map(task => (\n                <Task \n                    key={task.id} \n                    task={task} \n                    onDelete={() => handleTaskDelete(task)}\n                    onSubTaskDelete={fetchTasks}  // If you want to refresh after a subtask is deleted as well\n                />\n            ))}\n            <input \n                type=\"text\" \n                value={newTaskTitle} \n                onChange={e => setNewTaskTitle(e.target.value)} \n                placeholder=\"New Task Title\"\n            />\n            <button onClick={handleAddTask}>Add Task</button>\n        </div>\n    );\n}\n\nexport default TaskList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}