{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from '../AxiosConfig.js';\nfunction useTaskActions(endpoint, id, subtasks, parentEndpoint) {\n  _s();\n  const [items, setItems] = useState([]);\n  const [refresh, setRefresh] = useState(true); // Initialize with true to fetch data on mount\n  // const [taskdelete, setDelete] = useState(false);\n\n  const fetchData = useCallback(() => {\n    axios.get(`/${endpoint}/${id}/${subtasks}`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      console.log(\"Fetched items:\", response.data);\n      setItems(response.data);\n    }).catch(error => {\n      console.error(`Error fetching ${endpoint}:`, error);\n    });\n  }, [endpoint, id, subtasks]);\n\n  // const fetchParent = async () => {\n  //     const parentid = await getParentTaskId();\n  //     await axios.delete(`/${endpoint}/${id}`);\n  //     if (endpoint === 'tasks') {\n  //         axios.get(`/tasks`, {\n  //             headers: {\n  //                 'Authorization': `Bearer ${localStorage.getItem('token')}`\n  //             }\n  //         })\n\n  //     } else {\n  //         axios.get(`/${parentEndpoint}/${parentid}/${endpoint}`, {\n  //             headers: {\n  //                 'Authorization': `Bearer ${localStorage.getItem('token')}`\n  //             }\n  //         })\n  //         setDelete(false)\n  //         .then(response => {\n  //             setItems(response.data);\n  //         })\n  //         .catch(error => {\n  //             console.error(`Error fetching ${endpoint}:`, error);\n  //         })\n  //     }\n  //     ;\n  // }\n\n  useEffect(() => {\n    if (refresh) {\n      fetchData();\n      setRefresh(false); // Reset refresh state after fetching\n    }\n  }, [refresh]);\n  const getParentTaskId = async () => {\n    try {\n      const response = await axios.get(`/${endpoint}/${id}`);\n      const data = response.data;\n      if (parentEndpoint === 'subtasks') {\n        return data.task_id; // Return task_id for subtasks\n      } else if (parentEndpoint === 'subsubtasks') {\n        return data.subtask_id; // Return subtask_id for subsubtask\n      } else if (parentEndpoint === 'tasks') {\n        return 0; // Return 0 for a task\n      }\n    } catch (error) {\n      console.error(`Error fetching parent ID for ${parentEndpoint}:`, error);\n      return null;\n    }\n  };\n  const handleDelete = async itemId => {\n    try {\n      console.log(\"Attempting to delete item with ID:\", itemId);\n      await axios.delete(`/${endpoint}/${itemId}`);\n      console.log(\"Successfully deleted item with ID:\", itemId);\n      fetchData();\n      setRefresh(true);\n    } catch (error) {\n      console.error(`Error deleting ${endpoint}:`, error);\n    }\n  };\n  const handleAdd = title => {\n    axios.post(`/${endpoint}/${id}/${subtasks}`, {\n      title\n    }).then(() => {\n      setRefresh(true); // Trigger a refresh after successful addition\n    }).catch(error => {\n      console.error(`Error adding to ${endpoint}:`, error);\n    });\n  };\n  return {\n    items,\n    handleDelete,\n    handleAdd,\n    fetchData\n  };\n}\n_s(useTaskActions, \"zPK/UXnIf8qXOeLAeQB3aQCJGXY=\");\nexport default useTaskActions;","map":{"version":3,"names":["useState","useEffect","axios","useTaskActions","endpoint","id","subtasks","parentEndpoint","_s","items","setItems","refresh","setRefresh","fetchData","useCallback","get","headers","localStorage","getItem","then","response","console","log","data","catch","error","getParentTaskId","task_id","subtask_id","handleDelete","itemId","delete","handleAdd","title","post"],"sources":["/Users/davicoscarelli/Documents/GitHub/makowebapp/frontend/src/components/useTaskActions.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from '../AxiosConfig.js';\n\nfunction useTaskActions(endpoint, id, subtasks, parentEndpoint) {\n    const [items, setItems] = useState([]);\n    const [refresh, setRefresh] = useState(true); // Initialize with true to fetch data on mount\n    // const [taskdelete, setDelete] = useState(false);\n\n    const fetchData = useCallback(() => {\n        axios.get(`/${endpoint}/${id}/${subtasks}`, {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n        .then(response => {\n            console.log(\"Fetched items:\", response.data);\n\n            setItems(response.data);\n        })\n        .catch(error => {\n            console.error(`Error fetching ${endpoint}:`, error);\n        });\n    }, [endpoint, id, subtasks])\n\n    // const fetchParent = async () => {\n    //     const parentid = await getParentTaskId();\n    //     await axios.delete(`/${endpoint}/${id}`);\n    //     if (endpoint === 'tasks') {\n    //         axios.get(`/tasks`, {\n    //             headers: {\n    //                 'Authorization': `Bearer ${localStorage.getItem('token')}`\n    //             }\n    //         })\n            \n    //     } else {\n    //         axios.get(`/${parentEndpoint}/${parentid}/${endpoint}`, {\n    //             headers: {\n    //                 'Authorization': `Bearer ${localStorage.getItem('token')}`\n    //             }\n    //         })\n    //         setDelete(false)\n    //         .then(response => {\n    //             setItems(response.data);\n    //         })\n    //         .catch(error => {\n    //             console.error(`Error fetching ${endpoint}:`, error);\n    //         })\n    //     }\n    //     ;\n    // }\n    \n    useEffect(() => {\n        if (refresh) {\n            fetchData();\n            setRefresh(false); // Reset refresh state after fetching\n        }\n    }, [refresh]);\n\n\n    const getParentTaskId = async () => {\n        try {\n            const response = await axios.get(`/${endpoint}/${id}`);\n            const data = response.data;\n    \n            if (parentEndpoint === 'subtasks') {\n                return data.task_id; // Return task_id for subtasks\n            } else if (parentEndpoint === 'subsubtasks') {\n                return data.subtask_id; // Return subtask_id for subsubtask\n            } else if (parentEndpoint === 'tasks') {\n                return 0; // Return 0 for a task\n            }\n        } catch (error) {\n            console.error(`Error fetching parent ID for ${parentEndpoint}:`, error);\n            return null;\n        }\n    };\n    \n    const handleDelete = async (itemId) => {\n        try {\n            console.log(\"Attempting to delete item with ID:\", itemId);\n\n            await axios.delete(`/${endpoint}/${itemId}`);\n            console.log(\"Successfully deleted item with ID:\", itemId);\n\n            fetchData();\n            setRefresh(true);\n        } catch (error) {\n            console.error(`Error deleting ${endpoint}:`, error);\n        }\n    };\n\n\n    const handleAdd = (title) => {\n        axios.post(`/${endpoint}/${id}/${subtasks}`, { title })\n            .then(() => {\n                setRefresh(true);// Trigger a refresh after successful addition\n            })\n            .catch(error => {\n                console.error(`Error adding to ${endpoint}:`, error);\n            });\n    };\n\n    return {\n        items,\n        handleDelete,\n        handleAdd, \n        fetchData\n    };\n}\n\nexport default useTaskActions;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}