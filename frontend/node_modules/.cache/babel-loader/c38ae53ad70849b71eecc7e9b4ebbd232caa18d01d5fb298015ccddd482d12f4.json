{"ast":null,"code":"import axios from 'axios';\nconst setAuthorizationHeader = () => {\n  const token = localStorage.getItem('token');\n  // console.log('Token before request:', token);  // Logging token\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\n// Set the default base URL\n//axios.defaults.baseURL = 'http://localhost:5000';\n\nsetAuthorizationHeader();\naxios.interceptors.response.use(response => response, error => {\n  console.log('Error response received:', error.response); // Logging the error response\n  if (error.response && error.response.status === 401) {\n    console.warn('401 received. Handling token and redirecting.'); // Logging 401 handling\n\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    window.location = '/login';\n  }\n  return Promise.reject(error);\n});\naxios.interceptors.request.use(config => {\n  setAuthorizationHeader();\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axios;","map":{"version":3,"names":["axios","setAuthorizationHeader","token","localStorage","getItem","defaults","headers","common","interceptors","response","use","error","console","log","status","warn","removeItem","window","location","Promise","reject","request","config"],"sources":["/Users/davicoscarelli/Documents/GitHub/makowebapp/frontend/src/AxiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\nconst setAuthorizationHeader = () => {\n    const token = localStorage.getItem('token');\n    // console.log('Token before request:', token);  // Logging token\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\n// Set the default base URL\n//axios.defaults.baseURL = 'http://localhost:5000';\n\nsetAuthorizationHeader();\n\naxios.interceptors.response.use(\n    response => response,\n    error => {\n        console.log('Error response received:', error.response);  // Logging the error response\n        if (error.response && error.response.status === 401) {\n            console.warn('401 received. Handling token and redirecting.');  // Logging 401 handling\n            \n            localStorage.removeItem('token');\n            delete axios.defaults.headers.common['Authorization'];\n            window.location = '/login';\n        }\n        return Promise.reject(error);\n    }\n);\n\naxios.interceptors.request.use(\n    config => {\n        setAuthorizationHeader();\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);\n\nexport default axios;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EACjC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C;EACA,IAAIF,KAAK,EAAE;IACPF,KAAK,CAACK,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAASL,KAAM,EAAC;EACtE,CAAC,MAAM;IACH,OAAOF,KAAK,CAACK,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACzD;AACJ,CAAC;;AAED;AACA;;AAEAN,sBAAsB,CAAC,CAAC;AAExBD,KAAK,CAACQ,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3BD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACLC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAACF,QAAQ,CAAC,CAAC,CAAE;EAC1D,IAAIE,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;IACjDF,OAAO,CAACG,IAAI,CAAC,+CAA+C,CAAC,CAAC,CAAE;;IAEhEZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChC,OAAOhB,KAAK,CAACK,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACrDU,MAAM,CAACC,QAAQ,GAAG,QAAQ;EAC9B;EACA,OAAOC,OAAO,CAACC,MAAM,CAACT,KAAK,CAAC;AAChC,CACJ,CAAC;AAEDX,KAAK,CAACQ,YAAY,CAACa,OAAO,CAACX,GAAG,CAC1BY,MAAM,IAAI;EACNrB,sBAAsB,CAAC,CAAC;EACxB,OAAOqB,MAAM;AACjB,CAAC,EACDX,KAAK,IAAI;EACL,OAAOQ,OAAO,CAACC,MAAM,CAACT,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeX,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}